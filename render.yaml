# render.yaml - Blueprint para Deploy no Render
# Documentação: https://render.com/docs/blueprint-spec

databases:
  # Banco de Dados PostgreSQL Gerenciado pelo Render
  - name: embrapa-db
    databaseName: vitivinicultura
    user: embrapa_user
    # Você selecionará o plano no dashboard do Render

services:
  # Serviço 1: Cache Redis Gerenciado pelo Render
  - type: redis
    name: embrapa-cache
    # plan: free # <-- REMOVIDA - Você selecionará o plano no dashboard do Render

  # Serviço 2: API Backend (Flask/Gunicorn )
  - type: web
    name: embrapa-api
    runtime: docker
    repo: https://github.com/gustavoimbelloni/projeto-embrapa # Render preenche automaticamente
    branch: master # Ou main, ajuste conforme sua branch principal
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    envVars:
      - key: FLASK_APP
        value: src.main:app
      - key: FLASK_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: embrapa-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: embrapa-cache
          property: connectionString

  # Serviço 3: Frontend (Next.js )
  - type: web
    name: embrapa-frontend
    runtime: docker
    repo: https://github.com/gustavoimbelloni/projeto-embrapa # Render preenche automaticamente
    branch: master # Ou main, ajuste conforme sua branch principal
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend
    envVars:
      # Conecta o Frontend à URL interna da API no Render
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: embrapa-api
          # property: url # <-- REMOVIDA TEMPORARIAMENTE para teste
          # Se a remoção não funcionar, podemos precisar definir manualmente após o deploy
